// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from constants.djinni

#import "DBConstants.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-variable"

BOOL const DBConstantsBoolConstant = YES;

int8_t const DBConstantsI8Constant = 1;

int16_t const DBConstantsI16Constant = 2;

int32_t const DBConstantsI32Constant = 3;

int64_t const DBConstantsI64Constant = 4;

float const DBConstantsF32Constant = 5.0f;

double const DBConstantsF64Constant = 5.0;

NSNumber * __nullable const DBConstantsOptBoolConstant = @YES;

NSNumber * __nullable const DBConstantsOptI8Constant = @1;

NSNumber * __nullable const DBConstantsOptI16Constant = @2;

NSNumber * __nullable const DBConstantsOptI32Constant = @3;

NSNumber * __nullable const DBConstantsOptI64Constant = @4;

NSNumber * __nullable const DBConstantsOptF32Constant = @5.0;

NSNumber * __nullable const DBConstantsOptF64Constant = @5.0;

NSString * __nonnull const DBConstantsStringConstant = @"string-constant";

NSString * __nullable const DBConstantsOptStringConstant = @"string-constant";

DBConstantRecord * __nonnull const DBConstantsObjectConstant = [[DBConstantRecord alloc] initWithSomeInteger:DBConstantsI32Constant
        someString:DBConstantsStringConstant];

BOOL const DBConstantsDummy = NO;

#pragma clang diagnostic pop

@implementation DBConstants

- (nonnull instancetype)init
{
    if (self = [super init]) {
    }
    return self;
}

+ (nonnull instancetype)constants
{
    return [[self alloc] init];
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p>", self.class, self];
}

@end
