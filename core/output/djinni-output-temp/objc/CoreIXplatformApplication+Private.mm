// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.djinni

#import "CoreIXplatformApplication+Private.h"
#import "CoreIXplatformApplication.h"
#import "CoreIDataProvider+Private.h"
#import "CoreIPalBundle+Private.h"
#import "CoreIUiControllerFactory+Private.h"
#import "CoreIXplatformApplication+Private.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface CoreIXplatformApplication ()

- (id)initWithCpp:(const std::shared_ptr<::core_gen::IXplatformApplication>&)cppRef;

@end

@implementation CoreIXplatformApplication {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::core_gen::IXplatformApplication>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::core_gen::IXplatformApplication>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)initApp:(nullable id<CoreIPalBundle>)palBundle {
    try {
        _cppRefHandle.get()->initApp(::djinni_generated::IPalBundle::toCpp(palBundle));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable CoreIXplatformApplication *)sharedApplication {
    try {
        auto r = ::core_gen::IXplatformApplication::sharedApplication();
        return ::djinni_generated::IXplatformApplication::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable CoreIUiControllerFactory *)getUiControllerFactory {
    try {
        auto r = _cppRefHandle.get()->getUiControllerFactory();
        return ::djinni_generated::IUiControllerFactory::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable CoreIDataProvider *)getDataProvider {
    try {
        auto r = _cppRefHandle.get()->getDataProvider();
        return ::djinni_generated::IDataProvider::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto IXplatformApplication::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto IXplatformApplication::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<CoreIXplatformApplication>(cpp);
}

}  // namespace djinni_generated

@end
