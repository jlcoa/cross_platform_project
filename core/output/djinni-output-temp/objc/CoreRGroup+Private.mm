// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from model.djinni

#import "CoreRGroup+Private.h"
#import "DJIMarshal+Private.h"
#include <cassert>

namespace djinni_generated {

auto RGroup::toCpp(ObjcType obj) -> CppType
{
    assert(obj);
    return {::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.id),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.groupName),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.groupType),
            ::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::toCpp(obj.userIds),
            ::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::toCpp(obj.owner),
            ::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::toCpp(obj.admin)};
}

auto RGroup::fromCpp(const CppType& cpp) -> ObjcType
{
    return [[CoreRGroup alloc] initWithId:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.id))
                                groupName:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.groupName))
                                groupType:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.groupType))
                                  userIds:(::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::fromCpp(cpp.userIds))
                                    owner:(::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::fromCpp(cpp.owner))
                                    admin:(::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::fromCpp(cpp.admin))];
}

}  // namespace djinni_generated
