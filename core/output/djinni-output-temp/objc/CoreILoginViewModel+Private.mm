// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from view_model.djinni

#import "CoreILoginViewModel+Private.h"
#import "CoreILoginViewModel.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface CoreILoginViewModel ()

- (id)initWithCpp:(const std::shared_ptr<::core_gen::ILoginViewModel>&)cppRef;

@end

@implementation CoreILoginViewModel {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::core_gen::ILoginViewModel>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::core_gen::ILoginViewModel>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (nonnull NSString *)getUserName {
    try {
        auto r = _cppRefHandle.get()->getUserName();
        return ::djinni::String::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setUserName:(nonnull NSString *)userName {
    try {
        _cppRefHandle.get()->setUserName(::djinni::String::toCpp(userName));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSString *)getPassword {
    try {
        auto r = _cppRefHandle.get()->getPassword();
        return ::djinni::String::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setPassword:(nonnull NSString *)password {
    try {
        _cppRefHandle.get()->setPassword(::djinni::String::toCpp(password));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setStatus:(CoreELoginStatus)status {
    try {
        _cppRefHandle.get()->setStatus(::djinni::Enum<::core_gen::ELoginStatus, CoreELoginStatus>::toCpp(status));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (CoreELoginStatus)getStatus {
    try {
        auto r = _cppRefHandle.get()->getStatus();
        return ::djinni::Enum<::core_gen::ELoginStatus, CoreELoginStatus>::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isLoading {
    try {
        auto r = _cppRefHandle.get()->isLoading();
        return ::djinni::Bool::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setLoading:(BOOL)loading {
    try {
        _cppRefHandle.get()->setLoading(::djinni::Bool::toCpp(loading));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto ILoginViewModel::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto ILoginViewModel::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<CoreILoginViewModel>(cpp);
}

}  // namespace djinni_generated

@end
