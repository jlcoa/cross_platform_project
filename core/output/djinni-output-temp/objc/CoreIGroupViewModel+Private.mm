// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from view_model.djinni

#import "CoreIGroupViewModel+Private.h"
#import "CoreIGroupViewModel.h"
#import "CoreIGroupTableDataSource+Private.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface CoreIGroupViewModel ()

- (id)initWithCpp:(const std::shared_ptr<::core_gen::IGroupViewModel>&)cppRef;

@end

@implementation CoreIGroupViewModel {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::core_gen::IGroupViewModel>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::core_gen::IGroupViewModel>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)setDataSource:(nullable CoreIGroupTableDataSource *)dataSource {
    try {
        _cppRefHandle.get()->setDataSource(::djinni_generated::IGroupTableDataSource::toCpp(dataSource));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable CoreIGroupTableDataSource *)getDataSource {
    try {
        auto r = _cppRefHandle.get()->getDataSource();
        return ::djinni_generated::IGroupTableDataSource::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto IGroupViewModel::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto IGroupViewModel::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<CoreIGroupViewModel>(cpp);
}

}  // namespace djinni_generated

@end
