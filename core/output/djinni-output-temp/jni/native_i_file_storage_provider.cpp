// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from pal_file_storage_provider.djinni

#include "native_i_file_storage_provider.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeIFileStorageProvider::NativeIFileStorageProvider() : ::djinni::JniInterface<::core_gen::IFileStorageProvider, NativeIFileStorageProvider>() {}

NativeIFileStorageProvider::~NativeIFileStorageProvider() = default;

NativeIFileStorageProvider::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeIFileStorageProvider::JavaProxy::~JavaProxy() = default;

std::string NativeIFileStorageProvider::JavaProxy::getDocumentsPath(const std::string & c_relative_path) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeIFileStorageProvider>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_getDocumentsPath,
                                                  ::djinni::get(::djinni::String::fromCpp(jniEnv, c_relative_path)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}
void NativeIFileStorageProvider::JavaProxy::createRelativeFolder(const std::string & c_relative_path) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeIFileStorageProvider>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_createRelativeFolder,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_relative_path)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeIFileStorageProvider::JavaProxy::remove(const std::string & c_path) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeIFileStorageProvider>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_remove,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_path)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
