// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from http.djinni

#include "native_http_callback.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeHttpCallback::NativeHttpCallback() : ::djinni::JniInterface<::core_gen::HttpCallback, NativeHttpCallback>("com/nextuc/HttpCallback$CppProxy") {}

NativeHttpCallback::~NativeHttpCallback() = default;


CJNIEXPORT void JNICALL Java_com_nextuc_HttpCallback_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<djinni::CppProxyHandle<::core_gen::HttpCallback>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nextuc_HttpCallback_00024CppProxy_native_1onNetworkError(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::core_gen::HttpCallback>(nativeRef);
        ref->on_network_error();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nextuc_HttpCallback_00024CppProxy_native_1onSuccess(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jshort j_httpCode, jstring j_data)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::core_gen::HttpCallback>(nativeRef);
        ref->on_success(::djinni::I16::toCpp(jniEnv, j_httpCode),
                        ::djinni::String::toCpp(jniEnv, j_data));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
