// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from pal_task_dispatcher.djinni

#pragma once

#include "djinni_support.hpp"
#include "i_task_dispatcher.hpp"

namespace djinni_generated {

class NativeITaskDispatcher final : ::djinni::JniInterface<::core_gen::ITaskDispatcher, NativeITaskDispatcher> {
public:
    using CppType = std::shared_ptr<::core_gen::ITaskDispatcher>;
    using CppOptType = std::shared_ptr<::core_gen::ITaskDispatcher>;
    using JniType = jobject;

    using Boxed = NativeITaskDispatcher;

    ~NativeITaskDispatcher();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeITaskDispatcher>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeITaskDispatcher>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeITaskDispatcher();
    friend ::djinni::JniClass<NativeITaskDispatcher>;
    friend ::djinni::JniInterface<::core_gen::ITaskDispatcher, NativeITaskDispatcher>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::core_gen::ITaskDispatcher
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void dispatchToUI(const std::shared_ptr<::core_gen::ITask> & task) override;
        void dispatchToCore(const std::shared_ptr<::core_gen::ITask> & task) override;
        void dispatchToDB(const std::shared_ptr<::core_gen::ITask> & task) override;
        void dispatchToBG(const std::shared_ptr<::core_gen::ITask> & task) override;

    private:
        friend ::djinni::JniInterface<::core_gen::ITaskDispatcher, ::djinni_generated::NativeITaskDispatcher>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/nextuc/ITaskDispatcher") };
    const jmethodID method_dispatchToUI { ::djinni::jniGetMethodID(clazz.get(), "dispatchToUI", "(Lcom/nextuc/ITask;)V") };
    const jmethodID method_dispatchToCore { ::djinni::jniGetMethodID(clazz.get(), "dispatchToCore", "(Lcom/nextuc/ITask;)V") };
    const jmethodID method_dispatchToDB { ::djinni::jniGetMethodID(clazz.get(), "dispatchToDB", "(Lcom/nextuc/ITask;)V") };
    const jmethodID method_dispatchToBG { ::djinni::jniGetMethodID(clazz.get(), "dispatchToBG", "(Lcom/nextuc/ITask;)V") };
};

}  // namespace djinni_generated
