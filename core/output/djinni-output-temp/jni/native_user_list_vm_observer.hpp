// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from view_model.djinni

#pragma once

#include "djinni_support.hpp"
#include "user_list_vm_observer.hpp"

namespace djinni_generated {

class NativeUserListVmObserver final : ::djinni::JniInterface<::core_gen::UserListVmObserver, NativeUserListVmObserver> {
public:
    using CppType = std::shared_ptr<::core_gen::UserListVmObserver>;
    using CppOptType = std::shared_ptr<::core_gen::UserListVmObserver>;
    using JniType = jobject;

    using Boxed = NativeUserListVmObserver;

    ~NativeUserListVmObserver();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeUserListVmObserver>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeUserListVmObserver>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeUserListVmObserver();
    friend ::djinni::JniClass<NativeUserListVmObserver>;
    friend ::djinni::JniInterface<::core_gen::UserListVmObserver, NativeUserListVmObserver>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::core_gen::UserListVmObserver
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void on_update(const std::experimental::optional<std::vector<::core_gen::ListChange>> & changes, const std::shared_ptr<::core_gen::UserListVm> & new_data) override;

    private:
        friend ::djinni::JniInterface<::core_gen::UserListVmObserver, ::djinni_generated::NativeUserListVmObserver>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/nextuc/UserListVmObserver") };
    const jmethodID method_onUpdate { ::djinni::jniGetMethodID(clazz.get(), "onUpdate", "(Ljava/util/ArrayList;Lcom/nextuc/UserListVm;)V") };
};

}  // namespace djinni_generated
