// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from model.djinni

#pragma once

#include "djinni_support.hpp"
#include "r_account_response.hpp"

namespace djinni_generated {

class NativeRAccountResponse final {
public:
    using CppType = ::core_gen::RAccountResponse;
    using JniType = jobject;

    using Boxed = NativeRAccountResponse;

    ~NativeRAccountResponse();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeRAccountResponse();
    friend ::djinni::JniClass<NativeRAccountResponse>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/nextuc/RAccountResponse") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Lcom/nextuc/RAccount;)V") };
    const jfieldID field_mAccessToken { ::djinni::jniGetFieldID(clazz.get(), "mAccessToken", "Ljava/lang/String;") };
    const jfieldID field_mRefreshToken { ::djinni::jniGetFieldID(clazz.get(), "mRefreshToken", "Ljava/lang/String;") };
    const jfieldID field_mExpiresIn { ::djinni::jniGetFieldID(clazz.get(), "mExpiresIn", "Ljava/lang/Integer;") };
    const jfieldID field_mUser { ::djinni::jniGetFieldID(clazz.get(), "mUser", "Lcom/nextuc/RAccount;") };
};

}  // namespace djinni_generated
