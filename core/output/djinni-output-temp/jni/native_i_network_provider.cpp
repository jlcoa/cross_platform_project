// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from pal_network_provider.djinni

#include "native_i_network_provider.hpp"  // my header
#include "native_i_network_callback.hpp"
#include "native_r_network_request.hpp"

namespace djinni_generated {

NativeINetworkProvider::NativeINetworkProvider() : ::djinni::JniInterface<::core_gen::INetworkProvider, NativeINetworkProvider>() {}

NativeINetworkProvider::~NativeINetworkProvider() = default;

NativeINetworkProvider::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeINetworkProvider::JavaProxy::~JavaProxy() = default;

void NativeINetworkProvider::JavaProxy::request(const ::core_gen::RNetworkRequest & c_request, const std::shared_ptr<::core_gen::INetworkCallback> & c_callback) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeINetworkProvider>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_request,
                           ::djinni::get(::djinni_generated::NativeRNetworkRequest::fromCpp(jniEnv, c_request)),
                           ::djinni::get(::djinni_generated::NativeINetworkCallback::fromCpp(jniEnv, c_callback)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
