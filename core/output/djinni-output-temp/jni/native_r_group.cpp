// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from model.djinni

#include "native_r_group.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeRGroup::NativeRGroup() = default;

NativeRGroup::~NativeRGroup() = default;

auto NativeRGroup::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeRGroup>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(jniEnv, c.id)),
                                                           ::djinni::get(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(jniEnv, c.groupName)),
                                                           ::djinni::get(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(jniEnv, c.groupType)),
                                                           ::djinni::get(::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::fromCpp(jniEnv, c.userIds)),
                                                           ::djinni::get(::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::fromCpp(jniEnv, c.owner)),
                                                           ::djinni::get(::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::fromCpp(jniEnv, c.admin)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeRGroup::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 7);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeRGroup>::get();
    return {::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mId)),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mGroupName)),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mGroupType)),
            ::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mUserIds)),
            ::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mOwner)),
            ::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mAdmin))};
}

}  // namespace djinni_generated
