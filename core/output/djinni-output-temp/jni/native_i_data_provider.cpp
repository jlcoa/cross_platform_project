// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from view_model.djinni

#include "native_i_data_provider.hpp"  // my header
#include "Marshal.hpp"
#include "native_i_data_change_delegate.hpp"
#include "native_r_contact.hpp"
#include "native_r_group.hpp"

namespace djinni_generated {

NativeIDataProvider::NativeIDataProvider() : ::djinni::JniInterface<::core_gen::IDataProvider, NativeIDataProvider>("com/nextuc/IDataProvider$CppProxy") {}

NativeIDataProvider::~NativeIDataProvider() = default;


CJNIEXPORT void JNICALL Java_com_nextuc_IDataProvider_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<djinni::CppProxyHandle<::core_gen::IDataProvider>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nextuc_IDataProvider_00024CppProxy_native_1setDelegate(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_delegate)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::core_gen::IDataProvider>(nativeRef);
        ref->setDelegate(::djinni_generated::NativeIDataChangeDelegate::toCpp(jniEnv, j_delegate));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jboolean JNICALL Java_com_nextuc_IDataProvider_00024CppProxy_native_1hasContact(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_id)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::core_gen::IDataProvider>(nativeRef);
        auto r = ref->hasContact(::djinni::String::toCpp(jniEnv, j_id));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_com_nextuc_IDataProvider_00024CppProxy_native_1hasGroup(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_id)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::core_gen::IDataProvider>(nativeRef);
        auto r = ref->hasGroup(::djinni::String::toCpp(jniEnv, j_id));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nextuc_IDataProvider_00024CppProxy_native_1getContact(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_id)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::core_gen::IDataProvider>(nativeRef);
        auto r = ref->getContact(::djinni::String::toCpp(jniEnv, j_id));
        return ::djinni::release(::djinni_generated::NativeRContact::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_nextuc_IDataProvider_00024CppProxy_native_1getGroup(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_id)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::core_gen::IDataProvider>(nativeRef);
        auto r = ref->getGroup(::djinni::String::toCpp(jniEnv, j_id));
        return ::djinni::release(::djinni_generated::NativeRGroup::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
