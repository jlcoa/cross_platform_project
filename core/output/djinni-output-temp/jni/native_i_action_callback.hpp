// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from view_model.djinni

#pragma once

#include "djinni_support.hpp"
#include "i_action_callback.hpp"

namespace djinni_generated {

class NativeIActionCallback final : ::djinni::JniInterface<::core_gen::IActionCallback, NativeIActionCallback> {
public:
    using CppType = std::shared_ptr<::core_gen::IActionCallback>;
    using CppOptType = std::shared_ptr<::core_gen::IActionCallback>;
    using JniType = jobject;

    using Boxed = NativeIActionCallback;

    ~NativeIActionCallback();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeIActionCallback>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeIActionCallback>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeIActionCallback();
    friend ::djinni::JniClass<NativeIActionCallback>;
    friend ::djinni::JniInterface<::core_gen::IActionCallback, NativeIActionCallback>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::core_gen::IActionCallback
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void onResponse(const ::core_gen::RActionResult & result) override;

    private:
        friend ::djinni::JniInterface<::core_gen::IActionCallback, ::djinni_generated::NativeIActionCallback>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/nextuc/IActionCallback") };
    const jmethodID method_onResponse { ::djinni::jniGetMethodID(clazz.get(), "onResponse", "(Lcom/nextuc/RActionResult;)V") };
};

}  // namespace djinni_generated
