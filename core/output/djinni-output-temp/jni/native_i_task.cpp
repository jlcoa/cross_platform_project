// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from pal_task_dispatcher.djinni

#include "native_i_task.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeITask::NativeITask() : ::djinni::JniInterface<::core_gen::ITask, NativeITask>("com/nextuc/ITask$CppProxy") {}

NativeITask::~NativeITask() = default;


CJNIEXPORT void JNICALL Java_com_nextuc_ITask_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<djinni::CppProxyHandle<::core_gen::ITask>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jint JNICALL Java_com_nextuc_ITask_00024CppProxy_native_1getId(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::core_gen::ITask>(nativeRef);
        auto r = ref->getId();
        return ::djinni::release(::djinni::I32::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_nextuc_ITask_00024CppProxy_native_1execute(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::core_gen::ITask>(nativeRef);
        ref->execute();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
