// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from network.djinni

#pragma once

#include "djinni_support.hpp"
#include "r_string_id_error.hpp"

namespace djinni_generated {

class NativeRStringIdError final {
public:
    using CppType = ::core_gen::RStringIdError;
    using JniType = jobject;

    using Boxed = NativeRStringIdError;

    ~NativeRStringIdError();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeRStringIdError();
    friend ::djinni::JniClass<NativeRStringIdError>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/nextuc/RStringIdError") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Lcom/nextuc/RFutureError;)V") };
    const jfieldID field_mId { ::djinni::jniGetFieldID(clazz.get(), "mId", "Ljava/lang/String;") };
    const jfieldID field_mError { ::djinni::jniGetFieldID(clazz.get(), "mError", "Lcom/nextuc/RFutureError;") };
};

}  // namespace djinni_generated
