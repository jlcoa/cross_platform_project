// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from view_model.djinni

#include "native_i_group_update_ui_controller.hpp"  // my header
#include "Marshal.hpp"
#include "native_i_group_callback.hpp"
#include "native_i_group_update_view_model.hpp"

namespace djinni_generated {

NativeIGroupUpdateUiController::NativeIGroupUpdateUiController() : ::djinni::JniInterface<::core_gen::IGroupUpdateUiController, NativeIGroupUpdateUiController>("com/nextuc/IGroupUpdateUiController$CppProxy") {}

NativeIGroupUpdateUiController::~NativeIGroupUpdateUiController() = default;


CJNIEXPORT void JNICALL Java_com_nextuc_IGroupUpdateUiController_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<djinni::CppProxyHandle<::core_gen::IGroupUpdateUiController>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_nextuc_IGroupUpdateUiController_00024CppProxy_native_1updateGroupName(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_groupName, jobject j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::core_gen::IGroupUpdateUiController>(nativeRef);
        ref->updateGroupName(::djinni::String::toCpp(jniEnv, j_groupName),
                             ::djinni_generated::NativeIGroupCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_nextuc_IGroupUpdateUiController_00024CppProxy_native_1getViewModel(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::core_gen::IGroupUpdateUiController>(nativeRef);
        auto r = ref->getViewModel();
        return ::djinni::release(::djinni_generated::NativeIGroupUpdateViewModel::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
