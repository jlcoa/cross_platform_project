// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from pal_network_provider.djinni

#include "native_i_network_status_provider.hpp"  // my header
#include "native_e_network_status.hpp"
#include "native_i_network_status_delegate.hpp"

namespace djinni_generated {

NativeINetworkStatusProvider::NativeINetworkStatusProvider() : ::djinni::JniInterface<::core_gen::INetworkStatusProvider, NativeINetworkStatusProvider>() {}

NativeINetworkStatusProvider::~NativeINetworkStatusProvider() = default;

NativeINetworkStatusProvider::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeINetworkStatusProvider::JavaProxy::~JavaProxy() = default;

void NativeINetworkStatusProvider::JavaProxy::setDelegate(const std::shared_ptr<::core_gen::INetworkStatusDelegate> & c_delegate) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeINetworkStatusProvider>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_setDelegate,
                           ::djinni::get(::djinni_generated::NativeINetworkStatusDelegate::fromCpp(jniEnv, c_delegate)));
    ::djinni::jniExceptionCheck(jniEnv);
}
::core_gen::ENetworkStatus NativeINetworkStatusProvider::JavaProxy::getNetworkStatus() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeINetworkStatusProvider>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_getNetworkStatus);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeENetworkStatus::toCpp(jniEnv, jret);
}
void NativeINetworkStatusProvider::JavaProxy::startMonitoring() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeINetworkStatusProvider>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_startMonitoring);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeINetworkStatusProvider::JavaProxy::stopMonitoring() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeINetworkStatusProvider>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_stopMonitoring);
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
