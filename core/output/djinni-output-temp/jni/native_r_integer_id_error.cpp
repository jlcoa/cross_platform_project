// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from network.djinni

#include "native_r_integer_id_error.hpp"  // my header
#include "Marshal.hpp"
#include "native_r_future_error.hpp"

namespace djinni_generated {

NativeRIntegerIdError::NativeRIntegerIdError() = default;

NativeRIntegerIdError::~NativeRIntegerIdError() = default;

auto NativeRIntegerIdError::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeRIntegerIdError>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.id)),
                                                           ::djinni::get(::djinni_generated::NativeRFutureError::fromCpp(jniEnv, c.error)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeRIntegerIdError::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 3);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeRIntegerIdError>::get();
    return {::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mId)),
            ::djinni_generated::NativeRFutureError::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mError))};
}

}  // namespace djinni_generated
