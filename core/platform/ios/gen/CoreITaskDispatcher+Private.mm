// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from pal_task_dispatcher.djinni

#import "CoreITaskDispatcher+Private.h"
#import "CoreITaskDispatcher.h"
#import "CoreITask+Private.h"
#import "DJIObjcWrapperCache+Private.h"

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class ITaskDispatcher::ObjcProxy final
: public ::core_gen::ITaskDispatcher
, public ::djinni::ObjcProxyCache::Handle<ObjcType>
{
public:
    using Handle::Handle;
    void dispatchToUI(const std::shared_ptr<::core_gen::ITask> & c_task) override
    {
        @autoreleasepool {
            [Handle::get() dispatchToUI:(::djinni_generated::ITask::fromCpp(c_task))];
        }
    }
    void dispatchToCore(const std::shared_ptr<::core_gen::ITask> & c_task) override
    {
        @autoreleasepool {
            [Handle::get() dispatchToCore:(::djinni_generated::ITask::fromCpp(c_task))];
        }
    }
    void dispatchToDB(const std::shared_ptr<::core_gen::ITask> & c_task) override
    {
        @autoreleasepool {
            [Handle::get() dispatchToDB:(::djinni_generated::ITask::fromCpp(c_task))];
        }
    }
    void dispatchToBG(const std::shared_ptr<::core_gen::ITask> & c_task) override
    {
        @autoreleasepool {
            [Handle::get() dispatchToBG:(::djinni_generated::ITask::fromCpp(c_task))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto ITaskDispatcher::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto ITaskDispatcher::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).Handle::get();
}

}  // namespace djinni_generated
