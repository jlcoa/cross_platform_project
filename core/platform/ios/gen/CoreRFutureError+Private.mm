// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from network.djinni

#import "CoreRFutureError+Private.h"
#import "CoreRNetworkError+Private.h"
#import "CoreRParsingError+Private.h"
#import "CoreRServerError+Private.h"
#import "DJIMarshal+Private.h"
#include <cassert>

namespace djinni_generated {

auto RFutureError::toCpp(ObjcType obj) -> CppType
{
    assert(obj);
    return {::djinni::Enum<::core_gen::EErrorType, CoreEErrorType>::toCpp(obj.type),
            ::djinni::Optional<std::experimental::optional, ::djinni_generated::RServerError>::toCpp(obj.serverSrror),
            ::djinni::Optional<std::experimental::optional, ::djinni_generated::RParsingError>::toCpp(obj.parsingError),
            ::djinni::Optional<std::experimental::optional, ::djinni_generated::RNetworkError>::toCpp(obj.networkError),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.generalMessage)};
}

auto RFutureError::fromCpp(const CppType& cpp) -> ObjcType
{
    return [[CoreRFutureError alloc] initWithType:(::djinni::Enum<::core_gen::EErrorType, CoreEErrorType>::fromCpp(cpp.type))
                                      serverSrror:(::djinni::Optional<std::experimental::optional, ::djinni_generated::RServerError>::fromCpp(cpp.serverSrror))
                                     parsingError:(::djinni::Optional<std::experimental::optional, ::djinni_generated::RParsingError>::fromCpp(cpp.parsingError))
                                     networkError:(::djinni::Optional<std::experimental::optional, ::djinni_generated::RNetworkError>::fromCpp(cpp.networkError))
                                   generalMessage:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.generalMessage))];
}

}  // namespace djinni_generated
