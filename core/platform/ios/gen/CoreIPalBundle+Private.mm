// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from pal_bundle.djinni

#import "CoreIPalBundle+Private.h"
#import "CoreIPalBundle.h"
#import "CoreIFileStorageProvider+Private.h"
#import "CoreILog+Private.h"
#import "CoreINetworkProvider+Private.h"
#import "CoreINetworkStatusProvider+Private.h"
#import "CoreITaskDispatcher+Private.h"
#import "DJIObjcWrapperCache+Private.h"

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class IPalBundle::ObjcProxy final
: public ::core_gen::IPalBundle
, public ::djinni::ObjcProxyCache::Handle<ObjcType>
{
public:
    using Handle::Handle;
    std::shared_ptr<::core_gen::INetworkProvider> getNetworkProvider() override
    {
        @autoreleasepool {
            auto r = [Handle::get() getNetworkProvider];
            return ::djinni_generated::INetworkProvider::toCpp(r);
        }
    }
    std::shared_ptr<::core_gen::ILog> getLog() override
    {
        @autoreleasepool {
            auto r = [Handle::get() getLog];
            return ::djinni_generated::ILog::toCpp(r);
        }
    }
    std::shared_ptr<::core_gen::IFileStorageProvider> getFileStorageProvider() override
    {
        @autoreleasepool {
            auto r = [Handle::get() getFileStorageProvider];
            return ::djinni_generated::IFileStorageProvider::toCpp(r);
        }
    }
    std::shared_ptr<::core_gen::INetworkStatusProvider> getNetworkStatusProvider() override
    {
        @autoreleasepool {
            auto r = [Handle::get() getNetworkStatusProvider];
            return ::djinni_generated::INetworkStatusProvider::toCpp(r);
        }
    }
    std::shared_ptr<::core_gen::ITaskDispatcher> getTaskDispatcher() override
    {
        @autoreleasepool {
            auto r = [Handle::get() getTaskDispatcher];
            return ::djinni_generated::ITaskDispatcher::toCpp(r);
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto IPalBundle::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto IPalBundle::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).Handle::get();
}

}  // namespace djinni_generated
