// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from view_model.djinni

#import "CoreIGroupCallback+Private.h"
#import "CoreIGroupCallback.h"
#import "CoreRGroup+Private.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class IGroupCallback::ObjcProxy final
: public ::core_gen::IGroupCallback
, public ::djinni::ObjcProxyCache::Handle<ObjcType>
{
public:
    using Handle::Handle;
    void onGroupUpdated(const ::core_gen::RGroup & c_group, ::core_gen::ECallbackResult c_code) override
    {
        @autoreleasepool {
            [Handle::get() onGroupUpdated:(::djinni_generated::RGroup::fromCpp(c_group))
                                     code:(::djinni::Enum<::core_gen::ECallbackResult, CoreECallbackResult>::fromCpp(c_code))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto IGroupCallback::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto IGroupCallback::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).Handle::get();
}

}  // namespace djinni_generated
